// Mocks generated by Mockito 5.4.6 from annotations
// in greendrop/test/view/groups/join_group_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i6;

import 'package:flutter/material.dart' as _i5;
import 'package:greendrop/model/group.dart' as _i3;
import 'package:greendrop/services/group_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GroupService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupService extends _i1.Mock implements _i2.GroupService {
  MockGroupService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Group> get groups =>
      (super.noSuchMethod(
            Invocation.getter(#groups),
            returnValue: <_i3.Group>[],
          )
          as List<_i3.Group>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i4.Future<void> fetchUserGroups(_i5.BuildContext? context) =>
      (super.noSuchMethod(
            Invocation.method(#fetchUserGroups, [context]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i3.Group?> createGroup(
    _i5.BuildContext? context,
    String? groupName,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createGroup, [context, groupName]),
            returnValue: _i4.Future<_i3.Group?>.value(),
          )
          as _i4.Future<_i3.Group?>);

  @override
  _i4.Future<bool> joinGroup(_i5.BuildContext? context, String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#joinGroup, [context, groupId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> leaveGroup(
    _i5.BuildContext? context,
    String? groupId,
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#leaveGroup, [context, groupId, userId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
