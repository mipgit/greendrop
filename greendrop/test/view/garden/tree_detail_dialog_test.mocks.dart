// Mocks generated by Mockito 5.4.6 from annotations
// in greendrop/test/view/garden/tree_detail_dialog_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i10;

import 'package:flutter/material.dart' as _i2;
import 'package:greendrop/model/task.dart' as _i6;
import 'package:greendrop/model/tree.dart' as _i5;
import 'package:greendrop/model/user.dart' as _i3;
import 'package:greendrop/view-model/task_provider.dart' as _i8;
import 'package:greendrop/view-model/tree_provider.dart' as _i7;
import 'package:greendrop/view-model/user_provider.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueNotifier_0<T> extends _i1.SmartFake
    implements _i2.ValueNotifier<T> {
  _FakeValueNotifier_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_2 extends _i1.SmartFake implements Duration {
  _FakeDuration_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProvider extends _i1.Mock implements _i4.UserProvider {
  MockUserProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ValueNotifier<Duration> get countdownNotifier =>
      (super.noSuchMethod(
            Invocation.getter(#countdownNotifier),
            returnValue: _FakeValueNotifier_0<Duration>(
              this,
              Invocation.getter(#countdownNotifier),
            ),
          )
          as _i2.ValueNotifier<Duration>);

  @override
  _i3.User get user =>
      (super.noSuchMethod(
            Invocation.getter(#user),
            returnValue: _FakeUser_1(this, Invocation.getter(#user)),
          )
          as _i3.User);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  List<_i5.Tree> get userTrees =>
      (super.noSuchMethod(
            Invocation.getter(#userTrees),
            returnValue: <_i5.Tree>[],
          )
          as List<_i5.Tree>);

  @override
  List<_i6.Task> get userTasks =>
      (super.noSuchMethod(
            Invocation.getter(#userTasks),
            returnValue: <_i6.Task>[],
          )
          as List<_i6.Task>);

  @override
  List<_i7.TreeProvider> get treeProviders =>
      (super.noSuchMethod(
            Invocation.getter(#treeProviders),
            returnValue: <_i7.TreeProvider>[],
          )
          as List<_i7.TreeProvider>);

  @override
  List<_i8.TaskProvider> get taskProviders =>
      (super.noSuchMethod(
            Invocation.getter(#taskProviders),
            returnValue: <_i8.TaskProvider>[],
          )
          as List<_i8.TaskProvider>);

  @override
  Duration get timeUntilNextReset =>
      (super.noSuchMethod(
            Invocation.getter(#timeUntilNextReset),
            returnValue: _FakeDuration_2(
              this,
              Invocation.getter(#timeUntilNextReset),
            ),
          )
          as Duration);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i9.Future<void> updateUserBio(String? newBio) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserBio, [newBio]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<void> buyTree(_i2.BuildContext? context, String? treeId) =>
      (super.noSuchMethod(
            Invocation.method(#buyTree, [context, treeId]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> updateUserTreeInFirestore(_i5.Tree? updatedTree) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserTreeInFirestore, [updatedTree]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  void addPersonalizedTask(_i6.Task? task) => super.noSuchMethod(
    Invocation.method(#addPersonalizedTask, [task]),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<void> completeTask(_i6.Task? task) =>
      (super.noSuchMethod(
            Invocation.method(#completeTask, [task]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> unCompleteTask(_i6.Task? task) =>
      (super.noSuchMethod(
            Invocation.method(#unCompleteTask, [task]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  void reorderTasks(int? oldIndex, int? newIndex) => super.noSuchMethod(
    Invocation.method(#reorderTasks, [oldIndex, newIndex]),
    returnValueForMissingStub: null,
  );

  @override
  void removePersonalizedTask(_i6.Task? task) => super.noSuchMethod(
    Invocation.method(#removePersonalizedTask, [task]),
    returnValueForMissingStub: null,
  );

  @override
  void addDroplets(int? amount) => super.noSuchMethod(
    Invocation.method(#addDroplets, [amount]),
    returnValueForMissingStub: null,
  );

  @override
  void takeDroplets(int? amount) => super.noSuchMethod(
    Invocation.method(#takeDroplets, [amount]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
